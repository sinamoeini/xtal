
#define MIN(A,B) ((A) < (B) ? (A) : (B))
#define MAX(A,B) ((A) > (B) ? (A) : (B))
#define MAX_CHAR 1024
#define TOLERANCE 1.0e-10

#define V3ZERO(V) (V[0]=0, V[1]=0, V[2]=0)
#define M3DET(A) A[0][0]*A[1][1]*A[2][2]\
+A[1][0]*A[2][1]*A[0][2]\
+A[2][0]*A[0][1]*A[1][2]\
-A[0][2]*A[1][1]*A[2][0]\
-A[1][2]*A[2][1]*A[0][0]\
-A[2][2]*A[0][1]*A[1][0]
#define M3ZERO(A) ( A[0][0]=0, A[0][1]=0, A[0][2]=0, A[1][0]=0, \
A[1][1]=0, A[1][2]=0, A[2][0]=0, A[2][1]=0, A[2][2]=0 )
#define M3INV(A,B,determinant) ( \
B[0][0] = A[1][1]*A[2][2]-A[1][2]*A[2][1], \
B[1][1] = A[2][2]*A[0][0]-A[2][0]*A[0][2], \
B[2][2] = A[0][0]*A[1][1]-A[0][1]*A[1][0], \
B[1][0] = A[1][2]*A[2][0]-A[1][0]*A[2][2], \
B[2][1] = A[2][0]*A[0][1]-A[2][1]*A[0][0], \
B[0][2] = A[0][1]*A[1][2]-A[0][2]*A[1][1], \
B[2][0] = A[1][0]*A[2][1]-A[2][0]*A[1][1], \
B[0][1] = A[2][1]*A[0][2]-A[0][1]*A[2][2], \
B[1][2] = A[0][2]*A[1][0]-A[1][2]*A[0][0], \
(determinant) = A[0][0]*B[0][0] + A[0][1]*B[1][0] + A[0][2]*B[2][0], \
B[0][0] /= (determinant),B[1][1] /= (determinant),B[2][2] /= (determinant), \
B[1][0] /= (determinant),B[2][1] /= (determinant),B[0][2] /= (determinant), \
B[2][0] /= (determinant),B[0][1] /= (determinant),B[1][2] /= (determinant) )
#define M3COFAC(A,B) ( \
B[0][0] = A[1][1]*A[2][2]-A[1][2]*A[2][1], \
B[1][1] = A[2][2]*A[0][0]-A[2][0]*A[0][2], \
B[2][2] = A[0][0]*A[1][1]-A[0][1]*A[1][0], \
B[1][0] = A[1][2]*A[2][0]-A[1][0]*A[2][2], \
B[2][1] = A[2][0]*A[0][1]-A[2][1]*A[0][0], \
B[0][2] = A[0][1]*A[1][2]-A[0][2]*A[1][1], \
B[2][0] = A[1][0]*A[2][1]-A[2][0]*A[1][1], \
B[0][1] = A[2][1]*A[0][2]-A[0][1]*A[2][2], \
B[1][2] = A[0][2]*A[1][0]-A[1][2]*A[0][0])
#define M3NORMAL(A,B) ( \
B[0][0] = A[1][1]*A[2][2]-A[1][2]*A[2][1], \
B[0][1] = A[1][2]*A[2][0]-A[1][0]*A[2][2], \
B[0][2] = A[1][0]*A[2][1]-A[2][0]*A[1][1], \
B[1][0] = A[2][1]*A[0][2]-A[0][1]*A[2][2], \
B[1][1] = A[2][2]*A[0][0]-A[2][0]*A[0][2], \
B[1][2] = A[2][0]*A[0][1]-A[2][1]*A[0][0], \
B[2][0] = A[0][1]*A[1][2]-A[0][2]*A[1][1], \
B[2][1] = A[0][2]*A[1][0]-A[1][2]*A[0][0], \
B[2][2] = A[0][0]*A[1][1]-A[0][1]*A[1][0])
#define THICKNESS(B,d) (\
d[0]=1.0/sqrt(B[0][0]*B[0][0]+B[1][0]*B[1][0]+B[2][0]*B[2][0]),\
d[1]=1.0/sqrt(B[0][1]*B[0][1]+B[1][1]*B[1][1]+B[2][1]*B[2][1]),\
d[2]=1.0/sqrt(B[0][2]*B[0][2]+B[1][2]*B[1][2]+B[2][2]*B[2][2]))
#define M3EQV(A,B) ( B[0][0] = A[0][0], B[0][1] = A[0][1], \
B[0][2] = A[0][2], B[1][0] = A[1][0], B[1][1] = A[1][1], \
B[1][2] = A[1][2], B[2][0] = A[2][0], B[2][1] = A[2][1], \
B[2][2] = A[2][2] )
#define M3IDENTITY(A) ( A[0][0]=1, A[0][1]=0, A[0][2]=0, \
A[1][0]=0, A[1][1]=1, A[1][2]=0, A[2][0]=0, A[2][1]=0, A[2][2]=1 )
#define M3MUL_TRI_LOWER(A,B,C) (C[0][0]=A[0][0]*B[0][0],C[0][1]=0,C[0][2]=0,\
C[1][0]=A[1][0]*B[0][0]+A[1][1]*B[1][0],C[1][1]=A[1][1]*B[1][1],C[1][2]=0,\
C[2][0]=A[2][0]*B[0][0]+A[2][1]*B[1][0]+A[2][2]*B[2][0],\
C[2][1]=A[2][1]*B[1][1]+A[2][2]*B[2][1],C[2][2]=A[2][2]*B[2][2])
#define M3INV_TRI_LOWER(A,B) (B[0][0]=1.0/A[0][0],B[0][1]=0,B[0][2]=0,\
B[1][0]=-A[1][0]/(A[0][0]*A[1][1]),B[1][1]=1.0/A[1][1],B[1][2]=0,\
B[2][0]=(A[1][0]*A[2][1]-A[1][1]*A[2][0])/(A[0][0]*A[1][1]*A[2][2]),\
B[2][1]=-A[2][1]/(A[1][1]*A[2][2]),B[2][2]=1.0/A[2][2])
#define M3mV3(A,b,c) ( \
(c)[0] = A[0][0]*(b)[0] + A[0][1]*(b)[1] + A[0][2]*(b)[2], \
(c)[1] = A[1][0]*(b)[0] + A[1][1]*(b)[1] + A[1][2]*(b)[2], \
(c)[2] = A[2][0]*(b)[0] + A[2][1]*(b)[1] + A[2][2]*(b)[2] )
#define COMP(ityp,jtyp) ((ityp) < (jtyp) ? ((jtyp+1)*jtyp/2+ityp) : ((ityp+1)*ityp/2+jtyp))
#define LOC __LINE__,__FILE__




#ifndef xtal_init_h
#define xtal_init_h


#include "xtal.h"
class InitPtrs{
private:
public:
    InitPtrs(Xtal* ptr):
    xtal(ptr),
    memory(ptr->memory),
    error(ptr->error),
    box_collection(ptr->box_collection),
    region_collection(ptr->region_collection)
    {}
    virtual ~InitPtrs(){}
protected:
    Xtal* xtal;
    Memory*& memory;
    Error*& error;
    BoxCollection*& box_collection;
    RegionCollection*& region_collection;
};

#endif
